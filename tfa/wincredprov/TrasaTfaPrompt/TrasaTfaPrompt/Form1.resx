<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAXMAAAAxCAYAAAAoXUlBAAAABGdBTUEAALGPC/xhBQAAGX1JREFUeF7t
        XXGIHUXSDyHkdt9u9kLcnbfGfH7Bb29nNvHk8ORDRCQcInKIiMhxHMchcoiIiByHyPERkENEDhH/OETk
        EPmQDxE5REREgogcEkQOkSDhEAkSJIiEIEFCWO77VXXVdHVPz8x7b9/ue89MwY/urq6qrq7uqX3v7UzP
        roV+cW4hy89xWSI/1wO07mWiekWvONdL8EoEfVp3Y9XpBfyMSmknbJGswveRLCHiMUTe+fAmMLerhSDz
        srcVjSW2vH3Pp5LHoTrPw/urfdZH21fyhO/aVJr+hHzQV+NXrQ5A46X4il5W3CBhGZnmVos5zOMk/LsI
        X75JjWOBMV1JbV5X3xfUAfU/mIfqRLIx2uZeIiu+QRzPw/dnZUpbIox7T5tvSdSso8YrCRsH1Ufbzj2M
        XSQj7VSsiOf4zTJch51qf/6AhGQk6vU3DsLPC5j/WeBL1L+ETS6x11CndgQjE9QrMtZGypbTYxkq1VYs
        Q6X0xTJonwG+Rf9dMqV2guK/A2RU5gleBMujurSxqcN+I8d9hg9npXQ6VNq67Yv7sQFC2ag/WdexDa+U
        6RfvAz0JSy0hNm+ojtPz9TqEMk3y6JOYBPzI76CvgnZ/FM5WvTyvD9cjGeGj/yYJy8gEO+vA2dK2RUss
        6vwK2rTGlmcRyxsMsq4WkP94foAPA20EO7+q9avB37o+vcYcMCetWzm0eb7Mp2vClV7G1X1MUjG1tlM2
        fF9Kpqz78mEJyUiEud4VjGPsp9c2GLush/NQmVQstO3lNKbJWGhb+pIyxMvy52VK7RQoq4GUUduOeTyo
        q5fJRvuNHPcZvgZZdai0ddsX93fJvA7t/iicrXp5t8EIkYzw0T+OZH4HcLm0bdESizq/gjatseVZxPIG
        g6yrBWLxNVDItEYmjNslc1duKZljbz8ZjGPsp9c2GLush/NQmVQstO3lNKbJWGhb+pIyjvexTKmdAmVv
        IMGLYHlUl3aZbLTfyHGf4WuQVYdKW7d9cX+XzOvQ7o/C2aqXdxuMEMkIH/1bTuaw8URg26IlFnV+BW1a
        Y8uziOUNBllXC4yxibHulmmNTBi3S+auHDmZw8+92NtvBeMY++m1DcYu6+E8VCYVC217OY1pMhbalr6k
        jLNxCd/4lmRqzRQoi4GU0aAd86gu7TLZaL+R4z7D1yCrDpW2bvvi/i6Z16HdH4WzVS/vNhghkhE++seR
        zP8e2LZoiUWdX0Gb1tjyLGJ5g0HW1UJi9bRMa2TCuF0yd+XIyRz2lgD6PdqPY+yn1zYYu6yH81CZVCy0
        7eU0pslYaFv6kjJOdxO4XabWTIGyGEgZDdoxj+rSLpON9hs57jN8ngCXTodKW7d9cX+XzOvQ7o/C2aqX
        dxuMEMkIH/1bSua91Xw/YnMqsG3REos6v4I2rbHlWcTyBoOsq4XE6oPF1bXdMr2RCON2ydyVoyfzbH29
        Mo6xn17bYOxQt5RXmVQstO3lNKbJWGhb+pIybIPK/LhMrZkCZTGQMhq0Yx7VpV0mG+03ctxn+Bpk1aHS
        1m1f3N8l8zq0+6Nwturl3QYjRDLCR/+Wkjns3ADQHSyhfUVLLOr8Ctq0xpZnEcsbDLKuFhQrxPNL4FqZ
        3kiEcbtk7sot/MxS/MaOV8ZA7KfXNhg71C3lVSYVC217OY1pMhbalr6kjOe9J1NrpkA5NBDxIlge1aVd
        JhvtN3LcZ/gaZNWh0tZtX9zfJfM6tPujcLbq5d0GI0Qywkf/1j6ZZ/m9sLMZ2LZoiUWdX0Gb1tjyLGJ5
        g0HW1YJihXEuQe8XMr2RCPpdMnflSMl83zUF5bTn7XhlDMR+em2DsUPdUl5lUrHQtpfTmCZjoW3pS8qU
        vPwCvvHtkSnWU6AcGIh5ESyP6tIuk432GznuM3wNsupQaeu2L+7vknkd2v1ROFv18m6DESIZ4aN/a5/M
        +8XTnGCsbYuWWNT5FbRhv5p4BLG8wSDralHGKisel+mNRBj3/lq/Gvyt69NrzAFz0rqVQ1sTD8XUzcXO
        39V9TFIxtbZTNnxfSqas+3KkZL7Azy0U79vxyhiI/fTaBmOHuqW8yqRioW0vpzFNxkLb0peUKfvyTaD9
        WguUjYEqL4LlUV3aZbLRfiPHfYavQVYdKm3d9sX9E0zm76qO0/P1OoQyTfLok5gE/MjvoK+Cdn8Uzla9
        vNtghEhG+OgfPZkfOrQbcTnxQ0vmiOlbMsORCOM+VutXg791fXqNOWBOWrdyaPN8mU/XhCu9jKv7mKRi
        am2nbPi+lExZ9+VoyTwrDgDupzs7jrGfXttg7FC3lFeZVCy07eU0pslYaFv6kjJlH42RPypTrKfe8sYi
        Yf6qgsvespZtqJOz/LgOrOS3wLlL5SS5dJNgp00dfd/2VorM27AYZPzB+XMr63NIMBKVekJQX1cf2c/K
        Ihlk+VMLK0dXZxm9bOMRbNavKqAn1PrFEQnL0LSwkq8iPv8aNJljvD9W124HsZJfh3U/XfFR4C5GLk8D
        yzLNoQn7qfZnFti9BNyT9O+Hh/afFRKE/XRTGT8uJVFKnUq9ZrF/v0ffscTYOwb4e2tbMucyy1+XKU4P
        wemfAQMlcwSdHmddFNWpIPj0mvrIfsYLYJEVT4jazBI2/MOpTQY+Pegz8uP80L0ZuDBgMr+M8lZRnQjt
        u6bYDT/eDPwzcBcj74cLiNfNojY0Qf8+mXMKl4A7RLSjBOHafLiMH5cNyZw+LC63fxvfTpq7Ot8Lf867
        /VO9zkqfs/ysqEwPwekumc8QbVcyh/79zlZj/BRngMOiOjGCT7UPOLmLUZE/KCpDE/ZTl8xHpPnVjd3Y
        Vy+X8eOyKZnnH4jqxAi+7IYf77r9U73OSp/d/eZrojYdBIe6ZD5DtF3JHDZfcLYa4+fQLz7ct7qx5XNP
        tkrw9Rh8SR49wHtZ21n+iqgMTdhPXTIfkbAGi8DHZfy4bEjm/eIvojoxWjp0lD4kHHf7p3qdqc+uL/+d
        qE0Hwekumc8QbUcyX8rW9iDhfeRsNcbPoZ//VVQnStivhwE61a7iK+9lbWfFp4sro+3bLpmPTotZnuHa
        vFjGz+0dtzZSp1KuWdq/vxbViRL8uN3tn+p1pj67vvxFUZkOgtNdMp8h2o5kDnvXwcYZZ6sxfrI/ivtF
        daI0n/GZHydSvrqLsQTdTTFSbLpkPjohNi4pavy4TCdzrOPF3ko+8j/wx0n7sp8s4XrC2lavM/VZ+k6J
        ynQQAtsl8xmi7UjmWPdj0P/e2WqMH41zEfI3iurECX49U/ET4L3s25vw+1eiMhR1yXx0Quz+pDmF48Vl
        TTLv52f3XZOPdMfMuAn+7QFOpq4z9VnKTXzjG/lOqbETnO6S+QzRNiXzR72txvhRSbcDHhTViRN8uivw
        UcB7uWzznAY/h9oQ9lOXzEcgXJNIiHTbMOKk8eMyncxR39LzAOOk+X5B19nzqetMfTZ9Wz6Zc2yEwF5J
        yfxblF8QsFgoc65TCT3hU6lwslauyuP618BF1OlTK71N5QLsX4Str6xuPKbRd2WmbeV5v4z8N6jH80LJ
        vJ9JWIYi6L7qbTXGj+L77hwuVFGlT8a/A95uRp7gxRhEhvFc7z+PlIdnIaYFQG/DCXzlvVy2ee9+NNdf
        H/qTH+LxiItvFRiXPvF/hLHeDNCP0NTXBJVv0otlUrIxbxCZCvLfS0gGIsRnCXH/HHZlf2qZSOaM/H9E
        lXQXAXpq9IOBkSV4gwNj5f8twzOhfR/7Z9fc+Ewl4kJ4RlQmTwjklZPMBaFMkzz6JCYB37Tt2Gm0+6Nw
        turleX24Hsl4f4b++QObsQf809tq8BfjwIfgWFnwn/YytX75Nu+jiK+I5Q3Mmp388bU/9X9MsB8BfCWO
        5ANb0M2Kr4ChbyWDzuOAsWXQ4G9dn15jDuxXVRZtni/zJfkFsXV1H5NUTK3tlA3fl5Ip6yVviDfsgCB/
        GLhczteM53nOPvb9JaB8HRt4+yGzaWW0bn0s+8hfw3Ox0LaX05iGNri+udgv7pThmRazjYO+X6B6UpId
        4ENRmTzBmS6Zm74Q6JOYBHzTtmOn0e6Pwtmql+f14Xok4/0ZPpln+REA3yzUVoO/GAexu0dUmcCfaDIn
        Au9FlVP4WBGgm+WXUQYX7CAEn7pkzrzhkjn07y1tsg0tLU/tFxcWVovydEvwJp7MIUO/m4dPGKuelGQH
        Nr/HN76J36bLBIe6ZG76QqBPYhLwTduOnUa7Pwpnq16e14frkYz3Z+hkDlu/hD793i62GsbvF/Rk3PWi
        ygT+xJM54kY/9YTygS2nCxuDnUNtCD51Z7Mwb4hkvrZG1+UzpU22oaXlOftYv9OiyQTexJM55HYDr3gZ
        QPWklHmQnxN9GrokONQlc9MXAn0Sk4Bv2nbsNNr9UThb9fJuExIiGe/P8Mk8K46Hthr8zYpPgeC/9+BP
        wyfzG4DvpN/JB7acLmy8t+vw4aFeVgGfulMTmTd4MocOnZT4TmmTbWhpec4+2v8rqkzgTTyZE0HuQS8D
        qJ6Uzg7Xp+PGCjjUJXPTFwJ9EpOAb9p27DTa/VE4W/XyZvMEfF4z6h/hH6DQeSu01TB+v3hj19U3BskQ
        /GlI5svAp9Lv5ANbopvlXwBD3YkDn7pkzrwhknm/2A+cLW2yDS0tT8cKTyBE35Qk8/yIlwFUT0qdB+xO
        x504cKhL5qYvBPokJgHftO3YabT7o3C26uXdJiREMrRmI9yauLCSH0BC+Ty01ehv5RMIeBNP5vS1HmO/
        FsgHtkQ3o7uN8ttEayCCTpfMmTdEMl8prg9scl1Ly+Ox6PmGYE3QNxXJHLJ70OfvlFI9KXUeGO/bYb/x
        bQvBoS6Zm74Q6JOYBHzTtmOn0e6Pwtmql3ebkBDJ0JqNksyz4kbo0O2axlZ6fNinA/krL7JF3+STOQix
        8ffKk3xgy/uFsdvPoTYEn7pkzrxhPpnnDwQ2ua6l5bH984srxQFRZQJvWpI5/W7uT+ZUPSnLeWQ5fM2D
        /yVNhODQlZPM3T/6vocMfRoYGNgcQRnws1xKimFq7AZ/Yrh404MoZM9BxqrlMZ/mk38HDJXMMdavoF/x
        ocJz/LNA5dY++PMH4HP04RO+gNpc11J4pYzwSznDb7VVvDZ/TTWZo+9mgGLH/roLVhHMaahzqDF+l8yZ
        N1gyn3MnJb4Q2OS6lpbH9k+KaknQp7f5fwx8EiCL2pZf12dRq59/DNwiw3ty/8h9HDKB/1raueFaeki0
        Jkdw6EpK5tv2jwpswIMY+4T1xaHBnwism+XfAA8u9I/sFdPbRojHsxU/Kv6XOLmwOl1rbwlxPgT8S/3l
        vVz6buaU5acWsvX9otZKe/9jbc/i6lrvSsfcNWsD7UfsqR7wD4DjbhNelcfrMhWHttURfL3F7x3xOTEP
        XP/BP3EnQnCoS+Zjorn+Oh389CjieN6P2+BPBDcPlac/DKO/OaiNlpdz+gpJT7+V4zNMLCO8LKpTSUsr
        R/dgPu+ov7yXS9+DOdHaTM3ZMj806mXry0hs5ymPcJKTnMKxj3n0U0p/Og5tq6PF1fUefKSnu0v/K/Nw
        ++sLUZkcwaEumY+ZMM4aFvgdxBObtcGfCG4egfwFzOdxXBxjf/sKbOOTLB8PYMdDjNL+wrfJf41sIcSp
        vM2S93Lpv5mT2+PTdQ71hAgxehgx+RJxo2OEyxLxMvUSA/3MAj18kkW8Of6tyZyOx53qP6zwdzfgPvSI
        /5V5EK+f07Xe/p7L7SQ41CXzbaAfX/tTeq3Z/djclXND6uDmUfUf6/IR5rWlN+/HBLu3IB7BvdkME0vP
        w/7oFyO/em2nCPG7A/GmT3sUMzMHMyfHn65zqCdEiMOfODYcE0lOEquy7nmvilojYf88VrHJdS0NLyvO
        La1M/iUnTbRv5Sh9OHP/5Bf/K/PQ+ognc46N4ESXzLeRsLkPAa8jyfinLGvg5pH2H/r4qpc/Na74Y61/
        nxon/ck8p09r5ePW00rw8TrgLPksF5f67+u0v/vFJ/P96U4iO0GIx1iT+cJKTi85ebVik+taBrz3RHWq
        CfvFncwp/lfnIbxstJM5x0ZwqEvm202HD9NXtfuw0d0LIGrg5lHvP60P5vcZcAw2xfhohHFeSo2RSubY
        zO/PrW5s+z9kt0qLK3kP/n/IPtNeLudg5uT2OJ1FU4jaFUuIwXiTeZYvYg9/WrHJdS09D+VTojrVNJ/l
        B3ANhLdKBnNzdeATUZkMwYEume8Q9bIjy/Dhb/ClvIXOws2j3n9eHyr5Frz8r/uwycT0ULS4emQv9OnW
        r8oYyWQ+6U8cQxBi87z4bOZg5uT4m5ALDgy7EglxGG8y7+cHkfRob4Y2ua6ljsPfVO8V1akm+Ewfxugo
        C/a/OjdXx9wvz68eWRK1nSc40SXzHSYs+p1AeRudws2j3n9eH67LmvB558Xd+w6uD/X0GcZZA76ytkuY
        WHrkvxHVqSes8X3ks48V++/rys+m6BzqCRHiMOZkXvwy1uM217Used8trEzZ2+1rCN/46FvHi2Uswnn4
        uttjk3tZCZzokvkEaHE1X0K8nwPowR/2z82j3n9eH64HMpex0V4BMjHdSojR7dBLfjuIkzlkv4NfI730
        YhIEn+k8DTrd0czDzMnzP1w6dHTyj2BPkBCDcSfzJ2M9bnNdS8fDh5Azu/o3zEz8cR38toyFmUdQp7j1
        8ydFZecJTnTJfIIE329BAuWXQ7h51PuvG6Yiw3z/ppY2Qoz+6HQSMLF07eIUsCqqU0/wfz/wiY8VwcxJ
        +Ij1GSSUrf3jYcYJcRhbMofcXoDeWBTocZvrWpaJ7w1RnQmC74fV/+rcTOyy4oSo7DzBiS6ZT5gWr97o
        we/jSEJ0x0rad8BtGEIk4/iviLlWgv7rolOFiSUBsX27t5zP1CdY+PyKjxXBzEn4SOSXgMpZMzHBzqPQ
        oScadxQYt7at9VjGYkD5M5KAOEboL2NV1j2vJZnjjyj97BfpcZvrWlIeYfuPi+pMEHymh9Kq8bJ16usX
        3+EbX+W4iR0hONEl8ykhxP8GbJoP3Qapwm0YQjRHt2Yn5rP2N54sLG/Qa9Y+qxujksz7xZ9FdWYIPj/o
        Y0Uwcwrn3bofsJ+er49Vgqeo6dNrzAF+ad3Koc37mPlBohC4ut/rdG1qn5Epbads+L6UTFn3vMZkjvHp
        QbnNWI/bXNeS+yjfzNSLsLFWu4H/S8/Nx47WAfWxPhMyMGHgLplPES32iznM5zFsCnMkgIPbMIRojo7/
        GdD6uzlsXA+cE50qglhyu3w346wQ9gCdBln+LyKIl5k34tx6DjVsdcnc8do+mf86sGFtcl1L8jU/31vN
        Z+anOyXsl0fSc/Pz5mTeLx4TlZ0lONEl8ykkzGMd/tJZI/xEI8FtGEI0R1oz96Rp690BkLsbcnLPbAIm
        lqh/gzFn7n5szHEVOOXnZeekPI7ZaaDxDyDWoUvmjlebzJeX1ymZPxfYsDa5riXb+kxUZ4oQY3xISM0t
        nvdwJ3OOjeBEl8ynlBZWju7BBnoA4CMB3IYhRHOkNXNJv/XrHWT/rDqBDYWJJfDJwmp41vQs0OLVP6Gv
        xP4cahsvM2/E8wLQeEwB9lOXzB2vNpmjfw5zORHYsDa5riXz/iaqM0U/Wv2vvZhH4hCxaN5Z/rWo7CzB
        iS6ZTzktZht0JMAbmJt8So/myBuJ5956NgRi9a7VqcDEEnht19GjojlbhBj5c6htvCrzzh8UlSQhpl0y
        d7zaZA7ZAwA+cBgb1ibXteQDqab+0LYUIcZ0Vvu71bmF86Z1Aa4TtZ0jONEl81mggz/fjXnehzX6ijdN
        OC8usdEa54f+DDhtdSowsYTMH0R15gi+34Y5yHk4wZx83fU1nkON/dQlc8drSub0PwqWi/W4zfWypONk
        qy+CmAHad5B/TjpenVs4b6oDO38yJwbtkvkMUW81z7BpXsZ8/MFdtG4ocUE3fn2F3k3YjO4fq6JTga43
        fYJCQhTVmSPE4lqAjm7FfMyeiOedFZ8tZkdq9zTi0CVzx2v6meUhZ9PYsDa57kr4/O2P+vnkHnnfImFO
        v6jOrTpv4CVR2TmCE10ynzk6Rp8Q7gSiT9n5ewv99doDseb7xc1YY3qL/WWvE8HHkh733/mvimOiuYxf
        FHLCzcXsiWjeiAf9k7f2dXvYT10yd7yaZP5z5JD8IfjCh8jFetzmuivh5z9EcSZp30pBt/by+TN+biZ2
        WvbzU6KycwQnZjqZI2h/gX+UoBjwkw7EcSCe1IX/gKj9IGi+z0870l0EfBse1udTYFm6a2lpeX0R8rdB
        9gms+d+hT6cI8jprMgefHjIZ+0sxdpIwD3nZtJuTmx+X9L+HzzH/l7AvfrvQ36h9jRxknkQCoqdFq6Cn
        SLMEP8YgMkiGZb1WnsYTuSabVkblYnn2PT+P+iYjkzIJ/p278aG0q65aR6Jbx7fG4h7YfQZxphc6XIRd
        jbkmumdFZSYJ8aDfzU/SnvJzK5M5HZFxEtfQs5DZ+Vt64cT1cIjulkCiRrJ2b2uvA72ZZqYv8B8iYRPd
        inWhF9N+DQz9afrAgTV6kcYa7ND5E/Qy3n+i/oJ0zywhFnfhoqI/cheBj9CmJHM3vqEMfI5NR6PT/uV1
        uvvjRsT+EeSZV7EWp5HoZ+bQthTNrRyhnPkc7yvkS8ztbczxCeyr2+b67Q/tddRRK/VW6cnO/Dg22Zju
        Cz8284dQ4Q8SveX9xt7yWneRTQUdE8w2IYkfxt7CddY0l127/h9PiKEnXuD3jAAAAABJRU5ErkJggg==
</value>
  </data>
</root>